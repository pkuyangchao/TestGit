<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yc.movie.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.yc.movie.bean.Message">
    <id column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="movie_id" jdbcType="INTEGER" property="movieId" />
    <result column="message_content" jdbcType="VARCHAR" property="messageContent" />
    <result column="message_time" jdbcType="VARCHAR" property="messageTime" />
    <result column="message_good" jdbcType="INTEGER" property="messageGood" />
    <result column="message_bad" jdbcType="INTEGER" property="messageBad" />
  </resultMap>
   <resultMap id="ResultMapByStep" type="com.yc.movie.bean.Message">
    <id column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="movie_id" jdbcType="INTEGER" property="movieId" />
    <result column="message_content" jdbcType="VARCHAR" property="messageContent" />
    <result column="message_time" jdbcType="VARCHAR" property="messageTime" />
    <result column="message_good" jdbcType="INTEGER" property="messageGood" />
    <result column="message_bad" jdbcType="INTEGER" property="messageBad" />
    <association property="user" 
	 		select="com.yc.movie.dao.UserMapper.selectByPrimaryKey"
	 		column="user_id">
 	</association>
 	 <association property="movie" 
	 		select="com.yc.movie.dao.MovieMapper.selectByPrimaryKey"
	 		column="movie_id">
 	</association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    message_id, user_id, movie_id, message_content, message_time, message_good, message_bad
  </sql>
  <select id="selectByExample" parameterType="com.yc.movie.bean.MessageExample" resultMap="ResultMapByStep">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapByStep">
    select 
    <include refid="Base_Column_List" />
    from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yc.movie.bean.MessageExample">
    delete from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yc.movie.bean.Message">
    insert into message (message_id, user_id, movie_id, 
      message_content, message_time, message_good, 
      message_bad)
    values (#{messageId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{movieId,jdbcType=INTEGER}, 
      #{messageContent,jdbcType=VARCHAR}, #{messageTime,jdbcType=VARCHAR}, #{messageGood,jdbcType=INTEGER}, 
      #{messageBad,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yc.movie.bean.Message">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        message_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="movieId != null">
        movie_id,
      </if>
      <if test="messageContent != null">
        message_content,
      </if>
      <if test="messageTime != null">
        message_time,
      </if>
      <if test="messageGood != null">
        message_good,
      </if>
      <if test="messageBad != null">
        message_bad,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="movieId != null">
        #{movieId,jdbcType=INTEGER},
      </if>
      <if test="messageContent != null">
        #{messageContent,jdbcType=VARCHAR},
      </if>
      <if test="messageTime != null">
        #{messageTime,jdbcType=VARCHAR},
      </if>
      <if test="messageGood != null">
        #{messageGood,jdbcType=INTEGER},
      </if>
      <if test="messageBad != null">
        #{messageBad,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yc.movie.bean.MessageExample" resultType="java.lang.Long">
    select count(*) from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message
    <set>
      <if test="record.messageId != null">
        message_id = #{record.messageId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.movieId != null">
        movie_id = #{record.movieId,jdbcType=INTEGER},
      </if>
      <if test="record.messageContent != null">
        message_content = #{record.messageContent,jdbcType=VARCHAR},
      </if>
      <if test="record.messageTime != null">
        message_time = #{record.messageTime,jdbcType=VARCHAR},
      </if>
      <if test="record.messageGood != null">
        message_good = #{record.messageGood,jdbcType=INTEGER},
      </if>
      <if test="record.messageBad != null">
        message_bad = #{record.messageBad,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      movie_id = #{record.movieId,jdbcType=INTEGER},
      message_content = #{record.messageContent,jdbcType=VARCHAR},
      message_time = #{record.messageTime,jdbcType=VARCHAR},
      message_good = #{record.messageGood,jdbcType=INTEGER},
      message_bad = #{record.messageBad,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yc.movie.bean.Message">
    update message
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="movieId != null">
        movie_id = #{movieId,jdbcType=INTEGER},
      </if>
      <if test="messageContent != null">
        message_content = #{messageContent,jdbcType=VARCHAR},
      </if>
      <if test="messageTime != null">
        message_time = #{messageTime,jdbcType=VARCHAR},
      </if>
      <if test="messageGood != null">
        message_good = #{messageGood,jdbcType=INTEGER},
      </if>
      <if test="messageBad != null">
        message_bad = #{messageBad,jdbcType=INTEGER},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yc.movie.bean.Message">
    update message
    set user_id = #{userId,jdbcType=INTEGER},
      movie_id = #{movieId,jdbcType=INTEGER},
      message_content = #{messageContent,jdbcType=VARCHAR},
      message_time = #{messageTime,jdbcType=VARCHAR},
      message_good = #{messageGood,jdbcType=INTEGER},
      message_bad = #{messageBad,jdbcType=INTEGER}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>